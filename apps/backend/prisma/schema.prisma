// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  GUEST
  USER
  ADMIN
  SUPERUSER
}

model Game {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  active      Boolean    @default(true)
  round       Int        @default(0)
  totalRounds Int
  area        String     @default("")
  hint        Boolean    @default(false)
  difficulty  Difficulty @default(EASY)
  timer       Int        @default(0)
  joinCode    String     @default("")
  memberLimit Int        @default(5)

  members  Member[]
  rounds   Round[]
  messages Message[]
}

model Player {
  id Int @id @default(autoincrement())

  name String
  role Role   @default(GUEST)

  members Member[]
}

model Member {
  id Int @id @default(autoincrement())

  connected Boolean @default(true)
  isOwner   Boolean @default(false)

  game     Game      @relation(fields: [gameId], references: [id])
  gameId   Int
  player   Player    @relation(fields: [playerId], references: [id])
  playerId Int
  guesses  Guess[]
  messages Message[]
}

model Round {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  imageId Int
  image   Image   @relation(fields: [imageId], references: [id])
  gameId  Int
  game    Game    @relation(fields: [gameId], references: [id])
  guesses Guess[]
}

model Image {
  id Int @id @default(autoincrement())

  cordinates String
  url        String
  deleted    Boolean      @default(false)
  area       String
  difficulty Difficulty
  //TODO: RENAME TO rounds
  Round      Round[]
  ImageScore ImageScore[]
}

view ImageScore {
  id    Int   @unique
  image Image @relation(fields: [id], references: [id])
  score Int
}

model Guess {
  id Int @id @default(autoincrement())

  cordinates String
  score      Int    @default(0)
  vote       Int    @default(0)

  roundId  Int
  round    Round  @relation(fields: [roundId], references: [id])
  memberId Int
  member   Member @relation(fields: [memberId], references: [id])
}

model Message {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  content String

  member   Member @relation(fields: [memberId], references: [id])
  memberId Int
  game     Game?  @relation(fields: [gameId], references: [id])
  gameId   Int?
}

enum Difficulty {
  EASY
  NORMAL
  HARD
}
